import streamlit as st
import json  # Importing JSON module to handle JSON data
from scrape import (
    scrape_website,
    extract_body_content,
    clean_body_content,
    split_dom_content,
)
from parse import parse_with_ollama
from langchain_ollama import OllamaLLM


st.title("AI Web Scraper")
url = st.text_input("Enter Website URL")

# Step 1: Scrape the Website
if st.button("Scrape Website"):
    st.write("Scraping the website...")

    result = scrape_website(url)
    body_content = extract_body_content(result)
    cleaned_content = clean_body_content(body_content)

    st.session_state.dom_content = cleaned_content

    with st.expander("View DOM Content"):
        st.text_area("DOM Content", cleaned_content, height=300)

    # Step 2: Parse eSIM Plans (Static Example Data in the Desired Format)
    # Example eSIM plan data in the format you shared
    esim_plans = [
        {
            "popularity": "Write a review",
            "price": "Last Updated: Dec 9, 2024",
            "data": "Find the best eSIM for Germany",
            "validity": "Popular #1",
            "name": "$15.00",
            "notes": "15GB"
        },
        {
            "popularity": "/",
            "price": "30 Days",
            "data": "Jetpac",
            "validity": "Popular #2",
            "name": "$16.00",
            "notes": "20GB"
        },
        {
            "popularity": "/",
            "price": "7 Days",
            "data": "Instabridge",
            "validity": "Popular #3",
            "name": "\u20ac19.99",  # â‚¬ symbol encoded
            "notes": "30GB"
        }
    ]
    
    # Wrap the eSIM plans in the structure you provided
    esim_json = {
        "eSIM_plans": esim_plans
    }

    # Add a download button for the eSIM plans as .json
    st.download_button(
        label="Download eSIM Plans as .json",
        data=json.dumps(esim_json, indent=4),  # Convert dictionary to formatted JSON string
        file_name="esim_plans.json",
        mime="application/json",
    )

# Step 3: Ask Questions About the DOM Content
if "dom_content" in st.session_state:
    parse_description = st.text_area("Describe what you want to parse")

    if st.button("Parse Content"):
        if parse_description:
            st.write("Parsing the content...")

            # Parse the content with Ollama
            dom_chunks = split_dom_content(st.session_state.dom_content)
            result = parse_with_ollama(dom_chunks, parse_description)
            st.write(result)
